name: CI

on:
  push: { branches: [master] }
  pull_request: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  test-lint-cov:
    runs-on: ubuntu-latest

    ## ───── Matrix: run with and without the optional feature ─────
    strategy:
      matrix:
        include:
          - name: default
            FEATURES_ARG: ""
          - name: regex
            FEATURES_ARG: "--features regex"

    name: ${{ matrix.name }}

    steps:
    # ── Checkout ────────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ── Rust toolchain (stable) + components ───────────────────
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt, llvm-tools-preview

    # ── Cache build artefacts ───────────────────────────────────
    - uses: Swatinem/rust-cache@v2

    # ── Format check ────────────────────────────────────────────
    - name: rustfmt
      run: cargo fmt --all -- --check

    # ── Lint (deny warnings) ────────────────────────────────────
    - name: clippy
      run: cargo clippy --all-targets ${{ matrix.FEATURES_ARG }} -- -D warnings

    # ── Tests ────────────────────────────────────────
    - name: cargo test
      run: cargo test --workspace --all-targets ${{ matrix.FEATURES_ARG }}

    # ── Docs ────────────────────────────────────────
    - name: cargo doc
      run: cargo doc --no-deps --workspace

    # ── Install cargo-llvm-cov (pinned) ─────────────────────────
    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-llvm-cov
        version: latest

    # ── Coverage (table + lcov) ────────────────────────────
    - name: Generate coverage
      if: matrix.name == 'default'
      run: |
        cargo llvm-cov --workspace --lcov --output-path lcov.info \
                        ${{ matrix.FEATURES_ARG }} \
                        --fail-under-lines 100

    # ── Upload to Codecov (only once) ───────────────────────────
    - name: Upload coverage to Codecov
      if: matrix.name == 'default'
      uses: codecov/codecov-action@v4
      with:
        files: lcov.info
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}